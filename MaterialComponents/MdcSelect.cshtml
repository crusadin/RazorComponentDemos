@using Microsoft.JSInterop
@inject IJSRuntime jsRuntime

<div ref="selectElem" class="mdc-select">
  <select class="mdc-select__native-control" value=@Value onchange=@OnValueChanged>
    @ChildContent
  </select>
  <label class="mdc-floating-label">@Label</label>
  <div class="mdc-line-ripple"></div>
</div>

@functions {
    [Parameter] string Label { get; set; }
    [Parameter] RenderFragment ChildContent { get; set; }
    [Parameter] string Value { get; set; }
    [Parameter] Action<string> ValueChanged { get; set; }

    ElementRef selectElem;
    bool isFirstRender = true;

    void OnValueChanged(UIChangeEventArgs eventArgs)
    {
        Value = (string)eventArgs.Value;
        ValueChanged?.Invoke(Value);
    }

    protected override async Task OnAfterRenderAsync()
    {
        if (isFirstRender)
        {
            isFirstRender = false;
            await jsRuntime.InvokeAsync<object>(
                "BlazorMaterial.select.init", selectElem);
        }
    }
}
